package com.meitaomart.app.index;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.meitaomart.cart.service.CartService;
import com.meitaomart.common.pojo.CartItem;
import com.meitaomart.common.pojo.ItemInfo;
import com.meitaomart.common.utils.CookieUtils;
import com.meitaomart.common.utils.JsonUtils;
import com.meitaomart.content.pojo.ItemCategoryList;
import com.meitaomart.content.service.ContentService;
import com.meitaomart.pojo.MeitaoContent;
import com.meitaomart.pojo.MeitaoItemCategory;
import com.meitaomart.pojo.MeitaoUser;
import com.meitaomart.service.ItemCategoryService;
import com.meitaomart.service.ItemService;

@Controller
public class Index {
	@Value("${CONTENT_LUNBO_ID}")
    private Long CONTENT_LUNBO_ID;
    @Value("${PARENT_CATEGORY_ID}")
    private Long PARENT_CATEGORY_ID;
    @Value("${OPTIMIZED_CATEGORY_ID}")
    private Long OPTIMIZED_CATEGORY_ID;
    @Value("${RECENT_DAYS}")
    private Integer RECENT_DAYS;

    @Autowired
    private ContentService contentService;
    @Autowired
    private ItemService itemService;
    @Autowired
    private ItemCategoryService itemCategoryService;
    @Autowired
    private CartService cartService;

    @RequestMapping("/index/cartItemList")
    @ResponseBody
    public List<CartItem> showIndexCartItemList(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<CartItem> cartItemList = getCartListFromCookie(request);
        // 判断用户是否为登录状态
        MeitaoUser user = (MeitaoUser) request.getAttribute("user");
        // 如果是登录状态
        if (user != null) {
            // 从cookie中取购物车列表
            // 如果不为空，把cookie中的购物车商品和服务端的购物车商品合并。
            cartService.mergeCart(user.getId(), cartItemList);
            // 把cookie中的购物车删除
            CookieUtils.deleteCookie(request, response, "cart");
            // 从服务端取购物车列表
            cartItemList = cartService.getCartList(user.getId(), false);

        }
        return cartItemList;
    }

    @RequestMapping("/index/ad1List")
    @ResponseBody
    public List<MeitaoContent> showIndexAd1List(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<MeitaoContent> ad1List = contentService.getContentListByCid(CONTENT_LUNBO_ID);
        return ad1List;
    }


    @RequestMapping("/index/itemCategoryList")
    @ResponseBody
    public List<ItemCategoryList> showIndexItemCategoryList(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<ItemCategoryList> itemCategoryList = itemCategoryService.getItemCategoryListWithChildrenList(PARENT_CATEGORY_ID);
        return itemCategoryList;
    }

    @RequestMapping("/index/recentItemList")
    @ResponseBody
    public List<ItemInfo> showIndexRecentItemList(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<ItemInfo> recentItemList = itemService.getRecentItemList(RECENT_DAYS);
        return recentItemList;
    }

    @RequestMapping("/index/optimizedItemList")
    @ResponseBody
    public List<ItemInfo> showIndexOptimizedItemList(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<ItemInfo> optimizedItemList = itemService.getItemListByCategoryId(OPTIMIZED_CATEGORY_ID);
        return optimizedItemList;
    }

    @RequestMapping("/index/limitNumberItemList")
    @ResponseBody
    public List<ItemInfo> showIndexLimitNumberItemList(Model model, HttpServletRequest request, HttpServletResponse response) {
        List<ItemInfo> limitNumberItemList = itemService.getItemListByLimitNumber(10, "created_time");
        return limitNumberItemList;
    }
}
