package com.meitaomart.search.service.impl;

import java.util.List;

import org.apache.solr.client.solrj.SolrServer;
import org.apache.solr.common.SolrInputDocument;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.meitaomart.common.pojo.SearchItem;
import com.meitaomart.common.utils.MeitaoResult;
import com.meitaomart.search.mapper.SearchItemMapper;
import com.meitaomart.search.service.SearchItemService;

/**
 * 索引库维护Service
 * @author anluo
 *
 */

@Service
public class SearchItemServiceImpl implements SearchItemService {
	@Autowired
	private SearchItemMapper searchItemMapper;
	@Autowired
	private SolrServer solrServer;
	
	@Override
	public MeitaoResult importAllItems() {
		
		try {
			// 查询商品列表
			List<SearchItem> searchItemList = searchItemMapper.getItemList();
			// 遍历商品列表
			for (SearchItem searchItem : searchItemList) {
				// 创建文档对象
				SolrInputDocument document = new SolrInputDocument();
				// 向文档对象中添加域
				/*document.addField("id", searchItem.getId());
				document.addField("item_name", searchItem.getTitle());
				document.addField("item_sell_point", searchItem.getSell_point());
				document.addField("item_caption", searchItem.getSell_point());
				document.addField("item_net_weight", searchItem.getSell_point());
				document.addField("item_stock_number", searchItem.getSell_point());
				document.addField("item_images", searchItem.getImage());
				document.addField("item_sale_price", searchItem.getSell_point());
				document.addField("item_category_name", searchItem.getCategory_name());*/
				// 把文档对象写入索引库
				solrServer.add(document);
			}
			
			// 提交
			solrServer.commit();
			return MeitaoResult.ok();
		} catch (Exception e) {
			e.printStackTrace();
			return MeitaoResult.build(500, "数据导入失败！");
		}
		
	}

}
