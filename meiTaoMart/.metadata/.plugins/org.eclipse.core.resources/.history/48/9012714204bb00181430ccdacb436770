package com.meitaomart.cart.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.meitaomart.cart.builder.CartItemBuilder;
import com.meitaomart.cart.pojo.CartItem;
import com.meitaomart.cart.service.CartService;
import com.meitaomart.common.jedis.JedisClient;
import com.meitaomart.common.pojo.ItemInfo;
import com.meitaomart.common.utils.MeitaoResult;
import com.meitaomart.common.utils.JsonUtils;
import com.meitaomart.mapper.MeitaoItemMapper;
import com.meitaomart.pojo.MeitaoItem;
import com.meitaomart.service.ItemService;


/**
 * 购物车处理服务
 * @version 1.0
 */
@Service
public class CartServiceImpl implements CartService {

	@Autowired
	private JedisClient jedisClient;
	@Value("${REDIS_CART_PRE}")
	private String REDIS_CART_PRE;
	@Autowired
	private ItemMapper itemMapper'
	
	@Override
	public MeitaoResult addCart(long userId, long itemId, int purchaseQuantity) {
		//向redis中添加购物车。
		//数据类型是hash key：用户id field：商品id value：商品信息
		//判断商品是否存在
		boolean hexists = jedisClient.hexists(REDIS_CART_PRE + ":" + userId, itemId + "");
		//如果存在数量相加
		if (hexists) {
			String json = jedisClient.hget(REDIS_CART_PRE + ":" + userId, itemId + "");
			//把json转换成TbItem
			CartItem cartItem = JsonUtils.jsonToPojo(json, CartItem.class);
			cartItem.setPurchaseQuantity(cartItem.getPurchaseQuantity() + purchaseQuantity);
			//写回redis
			jedisClient.hset(REDIS_CART_PRE + ":" + userId, itemId + "", JsonUtils.objectToJson(cartItem));
			return MeitaoResult.ok();
		}
		
		//添加到购物车列表
		jedisClient.hset(REDIS_CART_PRE + ":" + userId, itemId + "", JsonUtils.objectToJson(cartItem));
		return MeitaoResult.ok();
	}

	@Override
	public MeitaoResult mergeCart(long userId, List<CartItem> cartItemList) {
		//遍历商品列表
		//把列表添加到购物车。
		//判断购物车中是否有此商品
		//如果有，数量相加
		//如果没有添加新的商品
		for (CartItem cartItem : cartItemList) {
			addCart(userId, cartItem, cartItem.getStockNumber());
		}
		//返回成功
		return MeitaoResult.ok();
	}

	@Override
	public List<CartItem> getCartList(long userId) {
		//根据用户id查询购车列表
		List<String> jsonList = jedisClient.hvals(REDIS_CART_PRE + ":" + userId);
		List<CartItem> cartItemList = new ArrayList<>();
		for (String string : jsonList) {
			//创建一个TbItem对象
			CartItem cartItem = JsonUtils.jsonToPojo(string, CartItem.class);
			//添加到列表
			cartItemList.add(cartItem);
		}
		return cartItemList;
	}

	@Override
	public MeitaoResult updateCartPurchaseQuantity(long userId, long itemId, int num) {
		//从redis中取商品信息
		String json = jedisClient.hget(REDIS_CART_PRE + ":" + userId, itemId + "");
		//更新商品数量
		MeitaoItem item = JsonUtils.jsonToPojo(json, MeitaoItem.class);
		item.setStockNumber(num);
		//写入redis
		jedisClient.hset(REDIS_CART_PRE + ":" + userId, itemId + "", JsonUtils.objectToJson(item));
		return MeitaoResult.ok();
	}

	@Override
	public MeitaoResult deleteCartItem(long userId, long itemId) {
		// 删除购物车商品
		jedisClient.hdel(REDIS_CART_PRE + ":" + userId, itemId + "");
		return MeitaoResult.ok();
	}

	@Override
	public MeitaoResult clearCartItem(long userId) {
		//删除购物车信息
		jedisClient.del(REDIS_CART_PRE + ":" + userId);
		return MeitaoResult.ok();
	}
}
