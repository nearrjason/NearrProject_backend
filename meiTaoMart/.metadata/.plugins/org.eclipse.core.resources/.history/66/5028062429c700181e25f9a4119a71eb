package com.meitaomart.user.controller;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.meitaomart.common.utils.CookieUtils;
import com.meitaomart.common.utils.MeitaoResult;
import com.meitaomart.pojo.MeitaoUser;
import com.meitaomart.sso.service.TokenService;
import com.meitaomart.user.service.UserService;

@Controller
public class UserCenterUpdateController {
	@Autowired
	private UserService userService;
	@Autowired
	private TokenService tokenService;
	
	@RequestMapping(value="/user/profile/account", method=RequestMethod.POST)
	@ResponseBody
	public MeitaoResult updateAccount(MeitaoUser user, String birthdayStr, HttpServletRequest request) {
		Long userId = ((MeitaoUser) request.getAttribute("user")).getId();
		String token = CookieUtils.getCookieValue(request, "token");
		
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		Date birthday = null;
		try {
			birthday = format.parse(birthdayStr);
		} catch (ParseException e) {
			return MeitaoResult.build(201, "生日信息错误，请重新设置生日！");
		}
		MeitaoUser updatedUser = userService.updateUser(user, userId);
		if (updatedUser == null) {
			return MeitaoResult.build(201, "保存信息失败！");
		}
		tokenService.updateUserByToken(token, updatedUser);
		return MeitaoResult.ok();
	}
	
	@RequestMapping(value="/user/profile/set_as_default", method=RequestMethod.POST)
	@ResponseBody
	public MeitaoResult setAsDefault(Long id, String type, HttpServletRequest request) {
		Long userId = ((MeitaoUser) request.getAttribute("user")).getId();
		return userService.setAsDefault(id, type, userId);
	}
	
	@RequestMapping(value="/user/profile/change_password", method=RequestMethod.POST)
	@ResponseBody
	public MeitaoResult changePassword(String oldPassword, String newPassword, HttpServletRequest request) {
		Long userId = ((MeitaoUser) request.getAttribute("user")).getId();
		MeitaoResult result = userService.changePassword(userId, oldPassword, newPassword);
		return result;
	}
}
